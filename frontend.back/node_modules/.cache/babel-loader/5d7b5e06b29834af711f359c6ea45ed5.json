{"ast":null,"code":"var _jsxFileName = \"/Users/Walker/Desktop/CS/Java/Spring/tutorial/frontend/src/CommentList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: [],\n      isLoading: true\n    };\n    this.remove = this.remove.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(`/api/tutorials/${this.props.match.params.tutorialId}/comments`).then(response => response.json()).then(data => this.setState({\n      comments: data,\n      isLoading: false\n    }));\n  }\n\n  async remove(id) {\n    await fetch(`/api/comments/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedComments = [...this.state.comments].filter(i => i.id !== id);\n      this.setState({\n        comments: updatedComments\n      });\n    });\n  }\n\n  render() {\n    const {\n      comments,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n    }\n\n    const commentList = comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              color: \"primary\",\n              tag: Link,\n              to: \"/comments/\" + comment.id,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              color: \"danger\",\n              onClick: () => this.remove(comment.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"float-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            tag: Link,\n            to: \"/tutorials/\" + this.props.match.params.tutorialId + \"/comments/new\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"90%\",\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                width: \"10%\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: commentList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(CommentList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/Walker/Desktop/CS/Java/Spring/tutorial/frontend/src/CommentList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","withRouter","CommentList","constructor","props","state","comments","isLoading","remove","bind","componentDidMount","setState","fetch","match","params","tutorialId","then","response","json","data","id","method","headers","updatedComments","filter","i","render","commentList","map","comment","whiteSpace","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass CommentList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {comments: [], isLoading: true};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isLoading: true});\n\n        fetch(`/api/tutorials/${this.props.match.params.tutorialId}/comments`)\n            .then(response => response.json())\n            .then(data => this.setState({comments: data, isLoading: false}));\n    }\n\n    async remove(id) {\n        await fetch(`/api/comments/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedComments = [...this.state.comments].filter(i => i.id !== id);\n            this.setState({comments: updatedComments});\n        });\n    }\n\n    render() {\n        const {comments, isLoading} = this.state;\n\n        if (isLoading) {\n            return <p>Loading...</p>;\n        }\n\n        const commentList = comments.map(comment => {\n            return <tr key={comment.id}>\n                <td style={{whiteSpace: 'nowrap'}}>{comment.content}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/comments/\" + comment.id}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(comment.id)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <div className=\"float-end\">\n                        <Button color=\"success\" tag={Link} to={\"/tutorials/\" + this.props.match.params.tutorialId + \"/comments/new\"}>Add Comment</Button>\n                    </div>\n                    <h3>Comments</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"90%\">Content</th>\n                            <th width=\"10%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {commentList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(CommentList);"]},"metadata":{},"sourceType":"module"}