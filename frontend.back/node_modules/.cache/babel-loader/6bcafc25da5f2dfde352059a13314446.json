{"ast":null,"code":"var _jsxFileName = \"/Users/Walker/Desktop/CS/Java/Spring/tutorial/frontend/src/Home.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\nimport { withCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isAuthenticated: false,\n      user: undefined\n    };\n    const {\n      cookies\n    } = props;\n    this.state.csrfToken = cookies.get('XSRF-TOKEN');\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/user', {\n      credentials: 'include'\n    });\n    const body = await response.text();\n\n    if (body === '') {\n      this.setState({\n        isAuthenticated: false\n      });\n    } else {\n      this.setState({\n        isAuthenticated: true,\n        user: JSON.parse(body)\n      });\n    }\n  }\n\n  login() {\n    let port = window.location.port ? ':' + window.location.port : '';\n\n    if (port === ':3000') {\n      port = ':8080';\n    }\n\n    window.location.href = '//' + window.location.hostname + port + '/private';\n  }\n\n  logout() {\n    fetch('/api/logout', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'X-XSRF-TOKEN': this.state.csrfToken\n      }\n    }).then(res => res.json()).then(response => {\n      window.location.href = response.logoutUrl + \"?id_token_hint=\" + response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n    });\n  }\n\n  render() {\n    const message = this.state.user ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", this.state.user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to manage your Projects.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n    const button = this.state.isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"link\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/tutorials\",\n          children: \"Manage Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"link\",\n        onClick: this.logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: this.login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [message, button]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withCookies(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/Walker/Desktop/CS/Java/Spring/tutorial/frontend/src/Home.js"],"names":["React","Component","AppNavbar","Link","Button","Container","withCookies","Home","constructor","props","state","isLoading","isAuthenticated","user","undefined","cookies","csrfToken","get","login","bind","logout","componentDidMount","response","fetch","credentials","body","text","setState","JSON","parse","port","window","location","href","hostname","method","headers","then","res","json","logoutUrl","idToken","origin","render","message","name","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'reactstrap';\nimport {withCookies} from \"react-cookie\";\n\nclass Home extends Component {\n    state = {\n        isLoading: true,\n        isAuthenticated: false,\n        user: undefined\n    };\n\n    constructor(props) {\n        super(props);\n        const {cookies} = props;\n        this.state.csrfToken = cookies.get('XSRF-TOKEN');\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    async componentDidMount() {\n        const response = await fetch('/api/user', {credentials: 'include'});\n        const body = await response.text();\n        if (body === '') {\n            this.setState(({isAuthenticated: false}))\n        } else {\n            this.setState({isAuthenticated: true, user: JSON.parse(body)})\n        }\n    }\n\n    login() {\n        let port = (window.location.port ? ':' + window.location.port : '');\n        if (port === ':3000') {\n            port = ':8080';\n        }\n        window.location.href = '//' + window.location.hostname + port + '/private';\n    }\n\n    logout() {\n        fetch('/api/logout', {method: 'POST', credentials: 'include',\n            headers: {'X-XSRF-TOKEN': this.state.csrfToken}}).then(res => res.json())\n            .then(response => {\n                window.location.href = response.logoutUrl + \"?id_token_hint=\" +\n                    response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n            });\n    }\n\n    render() {\n        const message = this.state.user ?\n            <h2>Welcome, {this.state.user.name}!</h2> :\n            <p>Please log in to manage your Projects.</p>;\n\n        const button = this.state.isAuthenticated ?\n            <div>\n                <Button color=\"link\"><Link to=\"/tutorials\">Manage Projects</Link></Button>\n                <br/>\n                <Button color=\"link\" onClick={this.logout}>Logout</Button>\n            </div> :\n            <Button color=\"primary\" onClick={this.login}>Login</Button>;\n\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    {message}\n                    {button}\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withCookies(Home);"]},"metadata":{},"sourceType":"module"}