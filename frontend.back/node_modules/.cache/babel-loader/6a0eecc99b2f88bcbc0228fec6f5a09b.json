{"ast":null,"code":"var _jsxFileName = \"/Users/Walker/Desktop/CS/Java/Spring/tutorial/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoading: true,\n      tutorials: []\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/tutorials');\n    const body = await response.json();\n    this.setState({\n      tutorials: body,\n      isLoading: false\n    });\n  }\n\n  render() {\n    const {\n      tutorials,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-intro\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tutorials List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), tutorials.map(tutorial => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: tutorial.title\n          }, tutorial.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Walker/Desktop/CS/Java/Spring/tutorial/frontend/src/App.js"],"names":["React","Component","logo","App","state","isLoading","tutorials","componentDidMount","response","fetch","body","json","setState","render","map","tutorial","title","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,SAAS,EAAE;AAFL,KADkB;AAAA;;AAMH,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAEI,IAAb;AAAmBL,MAAAA,SAAS,EAAE;AAA9B,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAACP,MAAAA,SAAD;AAAYD,MAAAA;AAAZ,QAAyB,KAAKD,KAApC;;AAEA,QAAIC,SAAJ,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEH,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGI,SAAS,CAACQ,GAAV,CAAcC,QAAQ,iBACnB;AAAA,sBACGA,QAAQ,CAACC;AADZ,aAAUD,QAAQ,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADH,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAeD;;AAlCyB;;AAqC5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    tutorials: []\n  };\n\n  async componentDidMount() {\n    const response = await fetch('/api/tutorials');\n    const body = await response.json();\n    this.setState({ tutorials: body, isLoading: false });\n  }\n\n  render() {\n    const {tutorials, isLoading} = this.state;\n\n    if (isLoading) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div className=\"App-intro\">\n              <h2>Tutorials List</h2>\n              {tutorials.map(tutorial =>\n                  <div key={tutorial.id}>\n                    {tutorial.title}\n                  </div>\n              )}\n            </div>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}